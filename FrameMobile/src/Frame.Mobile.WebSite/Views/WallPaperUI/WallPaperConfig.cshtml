@using FrameMobile.Model;
@using FrameMobile.Model.Theme;
@using FrameMobile.Model.Mobile;
@using FrameMobile.Common;
@using NCore;
@model WallPaperConfigView
@{
    bool isUpdateMode = ViewData["IsUpdate"] != null;
    ViewBag.Title = "壁纸配置";
    Layout = "~/Views/Shared/_WallPaperLayout.cshtml";

    var actionName = "WallPaperConfig";
    var imagePrefix = ConfigKeys.TYD_WALLPAPER_THUMBNAIL_IMAGE_PREFIX.ConfigValue();
    var categorylist = ViewData["Categorylist"] as SelectList;
    var subcategorylist = ViewData["SubCategorylist"] as SelectList;
    var topiclist = ViewData["Topiclist"] as SelectList;
    var propertylist = ViewData["Propertylist"] as SelectList;
    var wallpaper = ViewData["WallPaper"] as WallPaper;

    var categoryIds = ViewData["RelateCategoryIds"] as List<int>;
    var subcategoryIds = ViewData["RelateSubCategoryIds"] as List<int>;
    var topicIds = ViewData["RelateTopicIds"] as List<int>;
    var propertyIds = ViewData["RelatePropertyIds"] as List<int>;
    int i = 0;
    int j = 0;
    int k = 0;
    int l = 0;
}

<div class="contentHeader">
    <div class="contentHeaderInfo">
        <button class="btn btn-quaternary btn-large addapp" onclick="history.back();">
            返 回</button>
    </div>
    <div class="apphead">
        <div class="title">
            <b>@ViewBag.Title </b>
        </div>
    </div>
</div>
<div class="content">
    <div class="windows">
        @using (Html.BeginForm(actionName, "WallPaperUI", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {

            <p>
                <div class="title">
                    <h1>
                        @ViewBag.Title</h1>
                </div>
            </p>

            <div style="clear: both">
                <div hidden="hidden">
                    @Html.HiddenFor(m => m.WallPaper.Id)
                    @Html.HiddenFor(m => m.WallPaper.ThumbnailName)
                    @Html.HiddenFor(m => m.WallPaper.OriginalName)
                    @foreach (var c in Model.RelateCategoryIds)
                    {
                        @Html.HiddenFor(m => m.RelateCategoryIds[i])
                        ++i;
                    }
                    @foreach (var c in Model.RelateSubCategoryIds)
                    {
                        @Html.HiddenFor(m => m.RelateSubCategoryIds[j])
                        ++j;
                    }
                    @foreach (var c in Model.RelateTopicIds)
                    {
                        @Html.HiddenFor(m => m.RelateTopicIds[k])
                        ++k;
                    }
                    @foreach (var c in Model.RelateMobilePropertyIds)
                    {
                        @Html.HiddenFor(m => m.RelateMobilePropertyIds[l])
                        ++l;
                    }
                </div>
                @if (wallpaper.ThumbnailName != string.Empty)
                {
                    <img src="@imagePrefix + @wallpaper.ThumbnailName" />
                }
                <br />
                <strong>所属类别: </strong>
                @foreach (var category in categorylist)
                {
                    var ischecked = categoryIds.Contains(category.Value.ToInt32()) ? "checked='checked'" : string.Empty;
                    <input type="checkbox" name="category" value="@category.Value" @ischecked />@category.Text
                }
                <br />
                <div hidden="hidden">
                    <strong>所属子分类: </strong>
                    @foreach (var subcategory in subcategorylist)
                    {
                        var ischecked = subcategoryIds.Contains(subcategory.Value.ToInt32()) ? "checked='checked'" : string.Empty;
                        <input type="checkbox" name="subcategory" value="@subcategory.Value" @ischecked />@subcategory.Text
                    }
                    <br />
                </div>
                <strong>所属专题: </strong>
                @foreach (var topic in topiclist)
                {
                    var ischecked = topicIds.Contains(topic.Value.ToInt32()) ? "checked='checked'" : string.Empty;
                    <input type="checkbox" name="topic" value="@topic.Value" @ischecked />@topic.Text
                }
                <br />
                <strong>适配手机属性: </strong>
                @foreach (var property in propertylist)
                {
                    var ischecked = propertyIds.Contains(property.Value.ToInt32()) ? "checked='checked'" : string.Empty;
                    <input type="checkbox" name="property" value="@property.Value" @ischecked />@property.Text
                }
                <br />
                <strong>适配的缩略图文件: </strong>
                <input type="file" name="thumbnailfile" id="thumbnailfile" multiple="multiple" class="multi" accept="bmp|gif|jpg|jpeg|png|tiff|abm" />
                <br />
                <strong>适配的原图文件: </strong>
                <input type="file" name="originalfile" id="originalfile" multiple="multiple" class="multi" accept="bmp|gif|jpg|jpeg|png|tiff|abm" />
                <br />
                <button class="btn btn-large btn-blue addapp" style="margin-left: 50px">@ViewBag.Title</button>
            </div>
        }
    </div>
</div>
